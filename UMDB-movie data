import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
import kagglehub
import os

path = kagglehub.dataset_download("adrianmcmahon/imdb-india-movies")
df = pd.read_csv(os.path.join(path, "IMDB-Movie-Data.csv"))

df = df.dropna(subset=["Rating"])
df["Year"] = df["Year"].astype(int)
df["Duration"] = df["Duration"].str.replace(" min","").astype(int)
df["Genre"] = df["Genre"].str.split(",").map(lambda x: x[0])
encoder = OneHotEncoder(sparse=False, handle_unknown="ignore")
genre_enc = encoder.fit_transform(df[["Genre"]])
genre_df = pd.DataFrame(genre_enc, columns=encoder.get_feature_names_out(["Genre"]))
X = pd.concat([df[["Year","Duration","Votes"]].reset_index(drop=True), genre_df], axis=1)
y = df["Rating"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("RMSE:", mean_squared_error(y_test, y_pred, squared=False))
print("RÂ² score:", r2_score(y_test, y_pred))

import matplotlib.pyplot as plt
import seaborn as sns

imp = model.feature_importances_
fi = pd.Series(imp, index=X.columns).sort_values(ascending=False).head(10)
plt.figure(figsize=(8,6))
sns.barplot(x=fi.values, y=fi.index)
plt.title("Top 10 Feature Importances")
plt.tight_layout()
plt.show()
