import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
import kagglehub

path = kagglehub.dataset_download("adrianmcmahon/imdb-india-movies")
print("Path to dataset files:", path)

df = pd.read_csv(path + "/imdb-india-movies.csv")

selected_columns = ['Genre', 'Director', 'Actors', 'Year', 'Runtime (Minutes)', 'Rating']
df = df[selected_columns]
df.dropna(inplace=True)
df['Actors'] = df['Actors'].apply(lambda x: x.split(',')[0] if isinstance(x, str) else x)

label_encoders = {}
for col in ['Genre', 'Director', 'Actors']:
    le = LabelEncoder()
    df[col] = le.fit_transform(df[col])
    label_encoders[col] = le

X = df.drop('Rating', axis=1)
y = df['Rating']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared Score:", r2)

plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, alpha=0.6)
plt.xlabel("Actual Ratings")
plt.ylabel("Predicted Ratings")
plt.title("Actual vs Predicted Movie Ratings")
plt.plot([min(y), max(y)], [min(y), max(y)], 'r--')
plt.grid(True)
plt.show()
